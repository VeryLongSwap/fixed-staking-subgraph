type Deposit @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  poolIndex: BigInt! # uint256
  token: Bytes! # address
  amount: BigInt! # uint128
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  logIndex: BigInt!
}

type UserDepositState @entity {
  id: ID! # address#poolIndex
  address: Bytes! # address(same)
  poolIndex: BigInt! # pool index
  amount: BigInt! # uint
}

type Harvest @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  poolIndex: BigInt! # uint256
  token: Bytes! # address
  amount: BigInt! # uint128
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  logIndex: BigInt!
}

type Initialized @entity(immutable: true) {
  id: Bytes!
  version: BigInt! # uint64
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PendingWithdraw @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  poolIndex: BigInt! # uint256
  accumAmount: BigInt! # uint128
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  logIndex: BigInt!
}

type PoolAdded @entity(immutable: true) {
  id: Bytes!
  token: Bytes! # address
  lockPeriod: BigInt! # uint32
  poolIndex: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PoolChangeState @entity(immutable: true) {
  id: Bytes!
  poolIndex: BigInt! # uint256
  state: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PoolChanged @entity(immutable: true) {
  id: Bytes!
  poolIndex: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TokenWithdraw @entity(immutable: true) {
  id: Bytes!
  token: Bytes! # address
  amount: BigInt! # uint256
  to: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpaused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdraw @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  poolIndex: BigInt! # uint256
  token: Bytes! # address
  amount: BigInt! # uint128
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  logIndex: BigInt!
}
